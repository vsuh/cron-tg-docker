name: Build and push Docker image on new reminder-tgm tag

on:
  repository_dispatch:
    types: [new-reminder-tgm-tag]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check if release archive exists
        run: |
          curl -f -I "https://github.com/vsuh/reminder-tgm/archive/refs/tags/${{ github.event.client_payload.tag }}.tar.gz"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Update TAG in Dockerfile
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          sed -i '/^[[:space:]]*TAG=/s/TAG="[^"]*"/TAG="${{ github.event.client_payload.tag }}"/' Dockerfile
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add Dockerfile
          git diff --cached --quiet || git commit -m "Update TAG to ${{ github.event.client_payload.tag }}"
          git remote set-url origin https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }}
          git push origin HEAD:${GITHUB_REF##*/}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Build and push Docker image
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: vsuh/cron-tg-docker:${{ github.event.client_payload.tag }}


      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            vsuh/cron-tg-docker:${{ github.event.client_payload.tag }}
            vsuh/cron-tg-docker:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Verify pushed images
        run: |
          echo "‚úÖ Successfully built and pushed:"
          echo "  - vsuh/cron-tg-docker:${{ github.event.client_payload.tag }}"
          echo "  - vsuh/cron-tg-docker:latest"

      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ‚úÖ Build successful!
            
            üì¶ Image: vsuh/cron-tg-docker
            üè∑ Tags: ${{ github.event.client_payload.tag }}, latest
            üîó Repo: ${{ github.repository }}
            üéØ Event: ${{ github.event_name }}

      # (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) Redeploy —á–µ—Ä–µ–∑ Portainer API
      # - name: Redeploy stack in Portainer
      #   run: |
      #     curl -X POST "http://hl:9000/api/stacks/<STACK_ID>/redeploy?endpointId=<ENDPOINT_ID>" \
      #       -H "Authorization: Bearer ${{ secrets.PORTAINER_TOKEN }}"

